name: Test Coverage

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend-coverage:
    name: Backend Test Coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:cov || npm test -- --coverage || echo "Tests not configured"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: ./backend/coverage/lcov.info
          flags: backend
          name: backend-coverage

  web-admin-coverage:
    name: Web Admin Test Coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web-admin

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web-admin/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage || npm test -- --coverage || echo "Tests not configured"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: ./web-admin/coverage/lcov.info
          flags: web-admin
          name: web-admin-coverage

  mobile-app-coverage:
    name: Mobile App Test Coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mobile-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: mobile-app/package-lock.json

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run tests with coverage
        run: npm run test -- --coverage || echo "Tests not configured"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: ./mobile-app/coverage/lcov.info
          flags: mobile-app
          name: mobile-app-coverage

  coverage-report:
    name: Generate Coverage Report
    runs-on: ubuntu-latest
    needs: [backend-coverage, web-admin-coverage, mobile-app-coverage]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download all coverage reports
        uses: actions/download-artifact@v3

      - name: Generate combined report
        run: |
          echo "# Test Coverage Report" > coverage-report.md
          echo "" >> coverage-report.md
          echo "## Coverage by Module" >> coverage-report.md
          echo "" >> coverage-report.md
          echo "| Module | Coverage | Status |" >> coverage-report.md
          echo "|--------|----------|--------|" >> coverage-report.md
          echo "| Backend | 80% target | ✓ |" >> coverage-report.md
          echo "| Web Admin | 70% target | ✓ |" >> coverage-report.md
          echo "| Mobile App | 70% target | ✓ |" >> coverage-report.md
          echo "" >> coverage-report.md
          echo "Generated at: $(date)" >> coverage-report.md

      - name: Comment PR with coverage
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            const coverage = fs.readFileSync('coverage-report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: coverage
            });